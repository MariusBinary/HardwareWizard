<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:HardwareWizard.Controls" 
    xmlns:models="clr-namespace:HardwareWizard.Models"
    xmlns:helpers="clr-namespace:HardwareWizard.Helpers"
    xmlns:controls="clr-namespace:HardwareWizard.Controls"
    xmlns:converters="clr-namespace:HardwareWizard.Converters">

    <!--**********************************-->
    <!--            CONVERTERS            -->
    <!--**********************************-->
    
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:DoubleToTextConverter x:Key="doubleToText"/>
    <converters:DimentionConverter x:Key="dimensionConverter" />
    <converters:BorderClipConverter x:Key="BorderClip"/>
    <converters:ArrayMultiValueConverter x:Key="MultiValueConverter"/>
    
    <!--**********************************-->
    <!--          BASE CONTROLS           -->
    <!--**********************************-->

    <!--TextBlock-->
    <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="/HardwareWizard;component/Fonts/#Inter Medium"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>

    <!--Button-->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#007AFF" />
        <Setter Property="Foreground" Value="#F1F2F4" />
        <Setter Property="BorderBrush" Value="#007AFF" />
        <Setter Property="FontFamily" Value="/HardwareWizard;component/Fonts/#Inter Medium"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5">
                        <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ModelButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Button.Model.Background}" />
        <Setter Property="Foreground" Value="#F0F1F3" />
        <Setter Property="FontFamily" Value="/HardwareWizard;component/Fonts/#Inter Medium"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Button.Model.MouseOver}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--RadioButton-->
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="#FF3C3C3C" />
        <Setter Property="Foreground" Value="#FFC1C1C1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="10">
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FlatRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{DynamicResource Button.NavigationBar.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource Button.NavigationBar.Foreground}" />
        <Setter Property="FontFamily" Value="/HardwareWizard;component/Fonts/#Inter Medium"/>
        <Setter Property="Padding" Value="16,0" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Button.NavigationBar.MouseOver}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Button.NavigationBar.Checked}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--CheckBox-->
    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="#FF3478F7"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardIsChecked">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CheckFlag">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="17"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardIsCheckedOff">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CheckFlag">
                                <EasingDoubleKeyFrame KeyTime="0" Value="14"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Border x:Name="ForegroundPanel" BorderThickness="2" Width="40" Height="23" CornerRadius="10">
                                <Canvas>
                                    <Border Background="White" x:Name="CheckFlag" CornerRadius="8" VerticalAlignment="Center" BorderThickness="2" Width="19" Height="19" RenderTransformOrigin="0.5,0.5">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                    </Border>
                                </Canvas>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ForegroundPanel" Property="Background" Value="#FF3478F7" />
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="BeginStoryboardCheckedTrue" Storyboard="{StaticResource StoryboardIsChecked}" />
                                <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedFalse" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="ForegroundPanel" Property="Background" Value="#FF858585" />
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="BeginStoryboardCheckedFalse" Storyboard="{StaticResource StoryboardIsCheckedOff}" />
                                <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedTrue" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox-->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0" Value="#FF1C4EAA" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0" Value="#FF3478F7" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="2" BorderThickness="1" BorderBrush="#FF4C4D4F" Background="#FF3478F7"/>
            <Border Grid.Column="0" CornerRadius="1,0,0,1" Margin="1" Background="{DynamicResource ComboBox.Background}"/>
            <Path x:Name="Arrow" Grid.Column="1" Fill="White" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="6,3,23,3" VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="3,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" BorderThickness="1" BorderBrush="{DynamicResource ComboBox.Border}" Background="{DynamicResource ComboBox.Background}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF3478F7" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBox-->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="#FF212022" />
        <Setter Property="Foreground" Value="#FF9EA7AE" />
        <Setter Property="BorderBrush" Value="#FF2B2C33" />
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}" >
                    <Border CornerRadius="3" 
                            x:Name="root" 
                            Height="{TemplateBinding Height}" 
                            Width="{TemplateBinding Width}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost"
                                Padding="{TemplateBinding Padding}"
                                BorderThickness="0" 
                                IsTabStop="False" 
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource ControlReadOnlyForeground}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ListView-->
    <Style TargetType="{x:Type ListView}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}" >
                    <Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" >
                        <ScrollViewer x:Name="scroll" Padding="{TemplateBinding Padding}">
                            <VirtualizingStackPanel IsItemsHost="True" x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="AllowDrop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ContentPresenter Margin="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Menu-->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Foreground" Value="#a4a4a4"/>
        <Setter Property="Background" Value="#2b2b2b"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Effect="{StaticResource z-depth1}" CornerRadius="5" x:Name="MainMenu" Background="{TemplateBinding Background}" BorderThickness="1.5">
                        <StackPanel ClipToBounds="True" Margin="0,5" Orientation="Vertical" IsItemsHost="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="#FF4E4E4E"/>
        <Setter Property="Margin" Value="10,2"/>
        <Setter Property="Height" Value="1.5"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border 
                        Background="{TemplateBinding Background}" 
                        BorderThickness="0" 
                        Height="{TemplateBinding Height}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="#a4a4a4"/>
        <Setter Property="Background" Value="#2b2b2b"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition x:Name="Col3" Width="14"/>
                            </Grid.ColumnDefinitions>

                            <!-- ContentPresenter to show an Icon if needed -->
                            <ContentPresenter Grid.Column="0" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>

                            <!-- Glyph is a checkmark if needed for a checkable menu -->
                            <Grid Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
                            </Grid>

                            <!-- Content for the menu text etc -->
                            <ContentPresenter Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          x:Name="HeaderHost"
                                          RecognizesAccessKey="True"
                                          ContentSource="Header"/>

                            <!-- Content for the menu IGT -->
                            <ContentPresenter Grid.Column="2"
                                          Margin="8,1,8,1"
                                          x:Name="IGTHost"
                                          ContentSource="InputGestureText"
                                          VerticalAlignment="Center"/>

                            <!-- Arrow drawn path which points to the next level of the menu -->
                            <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
                            </Grid>

                            <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                            <Popup AllowsTransparency="True" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border Effect="{StaticResource z-depth1}" CornerRadius="5" Background="#2b2b2b" x:Name="SubMenuBorder" BorderThickness="1" Padding="0">
                                    <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True" Margin="0,5">
                                        <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>

                    <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                    <ControlTemplate.Triggers>
                        <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding" Value="6,1,6,1"/>
                            <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                            <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
                            <Setter Property="Width" Value="Auto" TargetName="Col3"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>

                        <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="6,1,6,1"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>

                        <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="0,5,0,5"/>
                        </Trigger>

                        <!-- Role = SubMenuItem : this is a child menu item which has children-->
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="0,5"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                        </Trigger>

                        <!-- If no Icon is present the we collapse the Icon Content -->
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                        </Trigger>

                        <!-- The GlyphPanel contains the CheckMark -->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                        </Trigger>

                        <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" Value="#444041" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--ProgressBar-->
    <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="#FF3478F7"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid MinWidth="200" ClipToBounds="True" Background="{DynamicResource Control.DetailedProgress.Background}">
                        <Grid.OpacityMask>
                            <VisualBrush>
                                <VisualBrush.Visual>
                                    <Border Background="Black" CornerRadius="6" 
                                            Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Grid}}" 
                                            Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}}" />
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Grid.OpacityMask>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="PART_Indicator" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush>Transparent</SolidColorBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="PART_Track" CornerRadius="5" Background="Transparent"/>
                        <Border x:Name="PART_Indicator" CornerRadius="5" HorizontalAlignment="Left" Background="{TemplateBinding Foreground}">
                            <Border.Clip>
                                <MultiBinding Converter="{StaticResource BorderClip}">
                                    <Binding Path="ActualWidth" ElementName="PART_Indicator" />
                                    <Binding Path="ActualHeight" ElementName="PART_Indicator" />
                                    <Binding Path="CornerRadius" ElementName="PART_Indicator" />
                                </MultiBinding>
                            </Border.Clip>
                            <Grid x:Name="Animation">
                                <Rectangle x:Name="PART_GlowRect" Width="100" HorizontalAlignment="Left" Margin="-100,0,0,0" >
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="#FF3478F7" Offset="0" />
                                                    <GradientStop Color="#FF2A64CF" Offset="0.5" />
                                                    <GradientStop Color="#FF3478F7" Offset="1" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LabeledProgressBar" TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <Grid.OpacityMask>
                            <VisualBrush>
                                <VisualBrush.Visual>
                                    <Border Background="Black" SnapsToDevicePixels="True" CornerRadius="6" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Grid}}" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}}" />
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Grid.OpacityMask>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}"/>
                        <Border CornerRadius="5" x:Name="PART_Track"/>
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                            <Border CornerRadius="6,0,0,6" x:Name="Indicator" Background="{TemplateBinding Foreground}">
                                <Border CornerRadius="6,0,0,6" x:Name="Animation" Background="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                </Border>
                            </Border>
                        </Grid>
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="18" Foreground="#252626" FontWeight="Bold" Text="{TemplateBinding Value, Converter={StaticResource doubleToText}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ScrollBar-->
    <Style x:Key="ScrollBarTrackThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                        <Border x:Name="CornerScrollBarRectangle" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Margin="0,1,0,1" Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="CornerScrollBarRectangle" Property="Width" Value="Auto" />
                            <Setter TargetName="CornerScrollBarRectangle" Property="Height" Value="Auto" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Foreground" Value="#ADABAB" />
        <Setter Property="Background" Value="{DynamicResource ScrollBar.Background}" />
        <Setter Property="Width" Value="7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="7" Margin="0,5" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>
                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollBarTrackThumb}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="#FF434343" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="false">
                            <Setter Value="#60434343" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="#3271ED" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="Auto" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp"  Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ToolTip-->
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Placement" Value="Mouse" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border" BorderBrush="{DynamicResource BorderMediumColor}" BorderThickness="1" Margin="0,5" MaxWidth="250" Background="#FF6C6C6C">
                        <TextBlock Margin="5" Text="{TemplateBinding Content}" TextWrapping="WrapWithOverflow" FontSize="14"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="True" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--**********************************-->
    <!--         CUSTOM CONTROLS          -->
    <!--**********************************-->
    
    <!--Graph Control-->
    <Style TargetType="{x:Type local:GraphControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GraphControl}">
                    <StackPanel Orientation="Vertical">
                        <TextBlock x:Name="PART_Title" Foreground="{DynamicResource SecondaryTextColor}" FontSize="12" Margin="0,0,0,2" Text="-"/>
                        <Grid x:Name="PART_Container" HorizontalAlignment="Right">
                            <Canvas x:Name="PART_Canvas" Background="{DynamicResource Control.Graph.Background}" ClipToBounds="True"/>
                            <Rectangle x:Name="PART_Mask">
                                <Rectangle.Fill>
                                    <VisualBrush TileMode="Tile" Stretch="Fill" Viewport="0,0,3.5,3.5" ViewportUnits="Absolute">
                                        <VisualBrush.Visual>
                                            <Rectangle StrokeThickness="0.5" Width="3.5" Height="3.5" Stroke="{DynamicResource Control.Graph.Stroke}"/>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>
                        <Grid Margin="0,5,0,0">
                            <TextBlock x:Name="PART_LeftDetails" Foreground="{DynamicResource SecondaryTextColor}" FontSize="12" Text="-" HorizontalAlignment="Left" FontWeight="Bold"/>
                            <TextBlock x:Name="PART_RightDetails" Foreground="{DynamicResource PrimaryTextColor}" FontSize="12" Text="-" HorizontalAlignment="Right" FontWeight="Bold"/>
                        </Grid>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Circular Progress Control-->
    <Style TargetType="{x:Type local:CircularProgressControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CircularProgressControl}">
                    <Grid>
                        <Grid x:Name="PART_Container">
                            <Grid.Resources>
                                <Style TargetType="{x:Type local:CircularProgressShape}">
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Style.Triggers>
                                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" To="1.025" Duration="0:0:0.1" />
                                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" To="1.025" Duration="0:0:0.1" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                            <BeginStoryboard >
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" To="1" Duration="0:0:0.1" />
                                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" To="1" Duration="0:0:0.1" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Resources>
                        </Grid>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" FontFamily="/HardwareWizard;component/Fonts/#Inter Medium" FontWeight="Normal">
                            <Run x:Name="PART_Value" Foreground="{DynamicResource PrimaryTextColor}" FontSize="24" Text="-"/>
                            <LineBreak/>
                            <Run x:Name="PART_Title" FontSize="14" Foreground="{DynamicResource SecondaryTextColor}" Text="-"/>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Detailed Progress Control-->
    <Style TargetType="{x:Type local:DetailedProgressControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DetailedProgressControl}">
                    <StackPanel Orientation="Vertical">
                        <TextBlock x:Name="PART_Title" Foreground="{DynamicResource SecondaryTextColor}" FontSize="12" Margin="0,0,0,2" Text="-"/>
                        <ProgressBar x:Name="PART_ProgressBar" Maximum="1" />
                        <Grid Margin="0,5,0,0">
                            <TextBlock x:Name="PART_LeftDetails" Foreground="{DynamicResource SecondaryTextColor}" FontSize="12" Text="-" HorizontalAlignment="Left" FontWeight="Bold"/>
                            <TextBlock x:Name="PART_RightDetails" Foreground="{DynamicResource PrimaryTextColor}" FontSize="12" Text="-" HorizontalAlignment="Right" FontWeight="Bold"/>
                        </Grid>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Details Table Control-->
    <Style TargetType="{x:Type local:DetailsTableControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DetailsTableControl}">
                    <Border CornerRadius="6" Background="{DynamicResource Control.DetailsTable.Background}" BorderBrush="{DynamicResource Control.DetailsTable.Border}" BorderThickness="1" >
                        <Grid Margin="15,7,15,15">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="35"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ListView x:Name="PART_LeftDetailsList" Grid.Column="0" HorizontalAlignment="Stretch" ScrollViewer.CanContentScroll="False" ScrollViewer.VerticalScrollBarVisibility="Disabled"/>
                            <Border Grid.Column="1" Width="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{DynamicResource Control.DetailsTable.Border}"/>
                            <ListView x:Name="PART_RightDetailsList" Grid.Column="2" HorizontalAlignment="Stretch" ScrollViewer.CanContentScroll="False" ScrollViewer.VerticalScrollBarVisibility="Disabled"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Animate Content Control-->
    <Style TargetType="{x:Type controls:AnimatedContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:AnimatedContentControl}">
                    <Grid>
                        <ContentPresenter Content="{TemplateBinding Content}" x:Name="PART_MainContent" />
                        <Rectangle x:Name="PART_PaintArea" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--**********************************-->
    <!--         GENERIC CONTROLS         -->
    <!--**********************************-->

    <!--Generic Item Control-->
    <Style TargetType="{x:Type local:GenericItemControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GenericItemControl}">
                    <Button x:Name="PART_Clickable" Style="{StaticResource ModelButton}" Command="{x:Static helpers:ViewCommands.BrowseTo}">
                        <Grid Margin="20,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="10"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="10"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="10"/>
                            </Grid.RowDefinitions>
                            <Image x:Name="PART_Image" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Width="78" Height="78"/>
                            <TextBlock x:Name="PART_Title" Grid.Row="3"  VerticalAlignment="Center" Text="-" HorizontalAlignment="Center" Foreground="{DynamicResource PrimaryTextColor}"/>
                            <TextBlock x:Name="PART_Description" Grid.Row="4" VerticalAlignment="Center" Text="-" HorizontalAlignment="Center" Foreground="{DynamicResource SecondaryTextColor}" FontSize="10"/>
                        </Grid>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--**********************************-->
    <!--        DASHBOARD CONTROLS        -->
    <!--**********************************-->
    
    <!--Dashboard Cpu Control-->
    <Style TargetType="{x:Type local:DashboardCpuControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DashboardCpuControl}">
                    <Border CornerRadius="6" Background="{DynamicResource ControlBackgroundColor}">
                        <Grid Margin="20" HorizontalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="10"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Image Width="22" Height="22" x:Name="PART_CpuIcon" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <TextBlock Foreground="{DynamicResource PrimaryTextColor}" x:Name="PART_CpuName"  HorizontalAlignment="Left" VerticalAlignment="Top" Text="-" Margin="32,0,0,0"/>
                            <Grid Grid.Row="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="120"/>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <local:CircularProgressControl x:Name="PART_CpuUsageRing" Title="CPU" Width="120" Height="120" BorderThickness="8" Grid.Row="0" Grid.RowSpan="5"/>
                                <Grid Grid.Column="2">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="16"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="16"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <local:GraphControl x:Name="PART_CpuUsageGraph" Title="Load" RightDetails="-" VerticalAlignment="Top" Grid.Column="2" Grid.Row="0" FixedXPixels="130" FixedYPixels="10" Fill="#3271ED" Background="#FF40444C"/>
                                    <local:DetailedProgressControl x:Name="PART_CpuTemperature" Title="Temperature" RightDetails="-" Grid.Column="2" Grid.Row="2" IndicatorHeight="10" />
                                    <ListView x:Name="PART_CpuUsageLegend" Grid.Column="2" Grid.Row="4">
                                        <models:LegendItemModel Name="System" Usage="-" Fill="#EB4B5E" Details="Processes used by the operating system."/>
                                        <models:LegendItemModel Name="User" Usage="-" Fill="#4994F7" Details="Processes used by the user."/>
                                    </ListView>
                                </Grid>
                            </Grid>
                            <Border Height="1" Grid.Row="3" Background="{DynamicResource ControlSplitterColor}"/>
                            <ListView x:Name="PART_CpuProcesses" Grid.Row="4" VerticalAlignment="Stretch" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Dashboard Ram Control-->
    <Style TargetType="{x:Type local:DashboardRamControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DashboardRamControl}">
                    <Border CornerRadius="6" Background="{DynamicResource ControlBackgroundColor}">
                        <Grid Margin="20" HorizontalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="10"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Image Width="22" Height="22" HorizontalAlignment="Left" VerticalAlignment="Top" Source="/HardwareWizard;component/Images/Shared/ic_ram_small.png"/>
                            <TextBlock Foreground="{DynamicResource PrimaryTextColor}" HorizontalAlignment="Left" VerticalAlignment="Top" Text="RAM" Margin="32,0,0,0"/>
                            <Grid Grid.Row="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="120"/>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <local:CircularProgressControl x:Name="PART_RamUsageRing" Title="RAM" Width="120" Height="120" BorderThickness="8" Grid.Row="0" Grid.RowSpan="5"/>
                                <Grid Grid.Column="2">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="16"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <local:GraphControl x:Name="PART_RamUsageGraph" Title="Usage" RightDetails="-" VerticalAlignment="Top" Grid.Column="2" Grid.Row="0" FixedXPixels="130" FixedYPixels="10" Fill="#3271ED" Background="#FF40444C"/>
                                    <ListView x:Name="PART_RamUsageLegend" Grid.Column="2" Grid.Row="2">
                                        <models:LegendItemModel Name="Hardware Reserved" Usage="-" Fill="#4994F7" Details="Memory reserved for use by the BIOS and some drivers for other devices."/>
                                        <models:LegendItemModel Name="In Use" Usage="-" Fill="#EB4B5E" Details="Memory used by processes, drivers, or the operating system."/>
                                        <models:LegendItemModel Name="Modified" Usage="-" Fill="#F0A13C" Details="Memory whose contents must be written to disk before it can be used for another purpose."/>
                                        <models:LegendItemModel Name="Standby" Usage="-" Fill="#DADADA" Details="Memory that contains cached data and code that is not actively used."/>
                                        <models:LegendItemModel Name="Available" Usage="-" Fill="#3E424A" Details="Memory that contains no useful data and will be used first when processes, drivers, or the operating system require additional memory."/>
                                    </ListView>
                                </Grid>
                            </Grid>
                            <Border Height="1" Grid.Row="3" Background="{DynamicResource ControlSplitterColor}"/>
                            <ListView x:Name="PART_RamProcesses" Grid.Row="4" VerticalAlignment="Stretch" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Dashboard Gpu Control-->
    <Style TargetType="{x:Type local:DashboardGpuControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DashboardGpuControl}">
                    <Border CornerRadius="6" Background="{DynamicResource ControlBackgroundColor}">
                        <Grid Margin="20" HorizontalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="10"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Image x:Name="PART_GpuIcon" Width="22" Height="22" HorizontalAlignment="Left" VerticalAlignment="Top" />
                            <TextBlock x:Name="PART_Title" HorizontalAlignment="Left" VerticalAlignment="Top" Text="-" Margin="32,0,0,0"/>
                            <Grid Grid.Row="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="120"/>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <local:CircularProgressControl x:Name="PART_GpuUsageRing" Title="GPU" Width="120" Height="120" BorderThickness="8" Grid.Row="0" Grid.RowSpan="5"/>
                                <Grid Grid.Column="2">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="16"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="16"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <local:DetailedProgressControl x:Name="PART_GpuTemperature" Title="Temperature" RightDetails="-" Grid.Column="2" Grid.Row="0" IndicatorHeight="10" />
                                    <local:DetailedProgressControl x:Name="PART_GpuMemory" Title="Memory" RightDetails="-" Grid.Column="2" Grid.Row="2" IndicatorHeight="10"/>
                                    <local:GraphControl x:Name="PART_GpuUsageGraph" Title="Load" RightDetails="-" VerticalAlignment="Top" Grid.Column="2" Grid.Row="4" FixedXPixels="130" FixedYPixels="10" Fill="#3271ED" Background="#FF40444C"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Dashboard Storage Control-->
    <Style TargetType="{x:Type local:DashboardStorageControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DashboardStorageControl}">
                    <Border CornerRadius="6" Background="{DynamicResource ControlBackgroundColor}">
                        <ListView x:Name="PART_StorageDrives" Margin="20,20,20,4" HorizontalAlignment="Stretch"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Dashboard Chassis Control-->
    <Style TargetType="{x:Type local:ChassisControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ChassisControl}">
                    <Grid>
                        <Image x:Name="PART_Wallpaper" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill"/>
                        <Image x:Name="PART_Case" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="30"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--**********************************-->
    <!--        COOLING CONTROLS          -->
    <!--**********************************-->

    <!--Cooling Fan Control-->
    <Style TargetType="{x:Type local:CoolingFanControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CoolingFanControl}">
                    <Border CornerRadius="6" Background="{DynamicResource ControlBackgroundColor}">
                        <Grid Margin="20">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="120"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="5"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="16"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock VerticalAlignment="Top" x:Name="PART_FanName" Text="-" Foreground="{DynamicResource PrimaryTextColor}"/>
                                <TextBlock VerticalAlignment="Top" Grid.Row="2"><Run x:Name="PART_FanRPM" FontSize="24" Text="0"/><Run Text=" "/><Run Foreground="{DynamicResource SecondaryTextColor}" Text="RPM"/></TextBlock>
                                <local:GraphControl Grid.Row="4" x:Name="PART_Graph" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" FixedXPixels="130" FixedYPixels="10" Fill="#3271ED" Background="#FF40444C"/>
                            </Grid>
                            <Grid Grid.Column="2">
                                <Image Width="78" Height="78" Source="{DynamicResource Image.FanControl.Case}"/>
                                <Image Width="78" Height="78" Source="{DynamicResource Image.FanControl.Blades}" x:Name="PART_FanBlades" RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <RotateTransform Angle="0"/>
                                    </Image.RenderTransform>
                                    <Image.Resources>
                                        <Storyboard x:Key="PART_FanAnimation">
                                            <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
                                                                           Storyboard.TargetName="PART_FanBlades" 
                                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="360"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:6" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </Image.Resources>
                                </Image>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Cooling Thermal Control-->
    <Style TargetType="{x:Type local:CoolingThermalControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CoolingThermalControl}">
                    <Border CornerRadius="6" Background="{DynamicResource ControlBackgroundColor}">
                        <StackPanel Margin="20" HorizontalAlignment="Stretch">
                            <TextBlock VerticalAlignment="Top" x:Name="PART_Title" Text="-" Margin="0,0,0,10"/>
                            <Grid x:Name="PART_Container" VerticalAlignment="Stretch"/>
                            <local:GraphsGridPanel x:Name="PART_GraphsPanel" Gap="20"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--**********************************-->
    <!--           LIST MODELS            -->
    <!--**********************************-->

    <!--Dashboard Drive Item Model-->
    <DataTemplate DataType="{x:Type models:DashboardDriveItemModel}">
        <Button Margin="0,0,0,16" Style="{StaticResource ModelButton}" Command="{x:Static helpers:ViewCommands.BrowseTo}">
            <Button.CommandParameter>
                <MultiBinding Converter="{StaticResource MultiValueConverter}">
                    <Binding Path="TargetView"  />
                    <Binding Path="DriveData" />
                </MultiBinding>
            </Button.CommandParameter>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="8"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Image Width="22" Height="22" HorizontalAlignment="Left" VerticalAlignment="Top" Source="{Binding Image}"></Image>
                <TextBlock Foreground="{DynamicResource PrimaryTextColor}"  HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding Name}" Margin="32,0,0,0"/>
                <Grid Grid.Row="2">
                    <controls:DetailedProgressControl LeftDetails="{Binding UsageDetails}" RightDetails="{Binding Percentage}" Grid.Column="2" Value="{Binding Value}" Grid.Row="2" IndicatorHeight="16"/>
                </Grid>
            </Grid>
        </Button>
    </DataTemplate>

    <!--Storage Partition Item Model-->
    <DataTemplate DataType="{x:Type models:StoragePartitionModel}">
        <Border BorderThickness="1" CornerRadius="4" BorderBrush="{DynamicResource ControlSplitterColor}" Height="56">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Background" Value="{DynamicResource ControlBackgroundColor}"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ListViewItem.MouseOver}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Grid Margin="10,0">
                <Image Width="22" Height="22" HorizontalAlignment="Left" VerticalAlignment="Center" Source="/HardwareWizard;component/Images/Shared/ic_partition.png"/>
                <StackPanel Orientation="Vertical" Margin="32,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <TextBlock Foreground="{DynamicResource PrimaryTextColor}" FontSize="14" Text="{Binding Name}"/>
                    <TextBlock Foreground="{DynamicResource SecondaryTextColor}" FontSize="10" Text="Partition"/>
                </StackPanel>
                <Border CornerRadius="5" BorderThickness="1" VerticalAlignment="Center" HorizontalAlignment="Right" BorderBrush="#FF919191">
                    <TextBlock Text="{Binding Value}" Margin="10,5" FontSize="14" Foreground="#FF919191"/>
                </Border>
            </Grid>
        </Border>
    </DataTemplate>

    <!--Legend Item Model-->
    <DataTemplate DataType="{x:Type models:LegendItemModel}">
        <Grid ToolTip="{Binding Details}">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Background" Value="Transparent"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ListViewItem.MouseOver}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="16"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border CornerRadius="2" HorizontalAlignment="Center" VerticalAlignment="Center" Background="{Binding Fill}" Width="14" Height="14" Grid.Column="0"/>
            <TextBlock  VerticalAlignment="Center" Text="{Binding Name}" HorizontalAlignment="Left" FontSize="12" Foreground="{DynamicResource SecondaryTextColor}" Grid.Column="2"/>
            <TextBlock VerticalAlignment="Center" Text="{Binding Usage}" HorizontalAlignment="Right" Foreground="{DynamicResource PrimaryTextColor}" FontSize="12" Grid.Column="4"/>
        </Grid>
    </DataTemplate>

    <!--Details Table Item Model-->
    <DataTemplate DataType="{x:Type models:DetailsTableItemModel}">
        <Border BorderThickness="0,0,0,1" BorderBrush="{DynamicResource Control.DetailsTable.Border}">
            <DockPanel Margin="0,8">
                <TextBlock Foreground="{DynamicResource SecondaryTextColor}" FontSize="12" HorizontalAlignment="Left" Text="{Binding Name}" Margin="0,0,10,0"/>
                <TextBlock Foreground="{DynamicResource SecondaryTextColor}" FontSize="12" HorizontalAlignment="Right" Text="{Binding Value}"/>
            </DockPanel>
        </Border>
    </DataTemplate>

    <!--Process Item Model-->
    <DataTemplate DataType="{x:Type models:ProcessItemModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="16"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Image HorizontalAlignment="Center" VerticalAlignment="Center" Width="14" Height="14" Grid.Column="0" Source="{Binding Image}"/>
            <TextBlock  VerticalAlignment="Center" Text="{Binding Name}" HorizontalAlignment="Left" FontSize="12" Foreground="{DynamicResource SecondaryTextColor}" Grid.Column="2"/>
            <TextBlock VerticalAlignment="Center" Text="{Binding Value}" HorizontalAlignment="Right" Foreground="{DynamicResource PrimaryTextColor}" FontSize="12" Grid.Column="4"/>
        </Grid>
    </DataTemplate>
</ResourceDictionary>
